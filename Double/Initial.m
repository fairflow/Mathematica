(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Needs["Units`"]


makeConst[fn_]:=(fn[]:=fn;SetAttributes[fn,HoldAll])


Needs["Monads`"];
Needs["Notation`"];
Notation[\!\(\*
TagBox[
RowBox[{"\[LeftBracketingBar]", "z___", "\[RightBracketingBar]"}],
"NotationTemplateTag",
BaseStyle->"NotationTemplateStyle"]\) \[DoubleLongLeftRightArrow] \!\(\*
TagBox[
RowBox[{"comprehend", "[", 
RowBox[{"Sets", ",", "z___"}], "]"}],
"NotationTemplateTag",
BaseStyle->"NotationTemplateStyle"]\)];
Notation[\!\(\*
TagBox[
RowBox[{"\[LeftAngleBracket]", "z___", "\[RightAngleBracket]"}],
"NotationTemplateTag",
BaseStyle->"NotationTemplateStyle"]\) \[DoubleLongLeftRightArrow] \!\(\*
TagBox[
RowBox[{"comprehend", "[", 
RowBox[{"List", ",", "z___"}], "]"}],
"NotationTemplateTag",
BaseStyle->"NotationTemplateStyle"]\)];
Notation[\!\(\*
TagBox[
RowBox[{"p_", "\[LeftTriangle]", "l_"}],
"NotationTemplateTag",
BaseStyle->"NotationTemplateStyle"]\) \[DoubleLongLeftRightArrow] \!\(\*
TagBox[
RowBox[{"generator", "[", 
RowBox[{"p_", ",", "l_"}], "]"}],
"NotationTemplateTag",
BaseStyle->"NotationTemplateStyle"]\)] ;
InfixNotation[\!\(\*
TagBox["\[DoubleVerticalBar]",
"NotationTemplateTag"]\),zipgen];


pluck[e_,l_]:=Block[{x},\[LeftAngleBracket]x,x_ \[LeftTriangle] l,x=!=e\[RightAngleBracket]]


r={{a,d},{a,e},{b,d},{b,f},{c,f},{b,d},{e,f},{f,c}};


r=r/.{x_,y_}->(x\[RightTeeArrow]y)


dom[r_]:=Block[{x},\[LeftBracketingBar]x,(x_\[RightTeeArrow]_)\[LeftTriangle]r\[RightBracketingBar]]
ran[r_]:=Block[{y},\[LeftBracketingBar]y,(_\[RightTeeArrow]y_)\[LeftTriangle]r\[RightBracketingBar]]
hereAre[dom[r],ran[r]]


leftFunction[r_]:=Block[{x,y},\[LeftAngleBracket]x\[RightTeeArrow]\[LeftAngleBracket]y,(x\[RightTeeArrow]y_) \[LeftTriangle] r\[RightAngleBracket],x_ \[LeftTriangle] dom[r]\[RightAngleBracket]]
leftFunction[r]


rightFunction[r_]:=Block[{y,x},\[LeftAngleBracket]y\[RightTeeArrow]\[LeftAngleBracket]x,(x_\[RightTeeArrow]y) \[LeftTriangle] r\[RightAngleBracket],y_ \[LeftTriangle] ran[r]\[RightAngleBracket]]
rightFunction[r]


converse[r_]:=Block[{y,x},\[LeftAngleBracket](y\[RightTeeArrow]x),(x_\[RightTeeArrow]y_) \[LeftTriangle] r\[RightAngleBracket]]
hereAre[r,converse[r]]


makeRel[f_,d_]:=Block[{a},\[LeftBracketingBar]a\[RightTeeArrow]f[a],a_\[LeftTriangle]d\[RightBracketingBar]]
squares=makeRel[#^2&,Range[3,7]]
add3=makeRel[#+3&,Range[4,40]]


prod[r_,s_]:=Block[{ra,rb,sa,sb},
\[LeftBracketingBar]{ra,sa}\[RightTeeArrow]{rb,sb},(ra_\[RightTeeArrow]rb_)\[LeftTriangle]r,(sa_\[RightTeeArrow]sb_)\[LeftTriangle]s\[RightBracketingBar]]
prod[{a\[RightTeeArrow]d,b\[RightTeeArrow]d},squares]


accountTrees["business"]=
{tr["Bank Accounts:",{rt@"Business Account"}],tr["Assets:",{tr["Capital Equipment:",{rt@"Computer Equipment",rt@"Machinery"}],rt@"Accounts Receivable",rt@"Buildings",rt@"Cash in Hand",rt@"Land",rt@"Plantations"}],
tr["Liabilities:",{rt@"Credit Card",rt@"Accounts Payable"}],
tr["Equity:",{tr["Partners Loan:",{rt@"Matthew loan",rt@"Beth loan",rt@"Connor loan",rt@"Mack loan",rt@"Agatha loan"}],
tr["Capital:",{rt@"Matthew capital",rt@"Beth capital",rt@"Connor capital",rt@"Mack capital",rt@"Agata capital"}],rt@"Opening Balances"}],
tr["Income:",
{rt["Interest"],
tr["Sales:",{tr["Food:",{rt@"Eggs and meat",rt@"Fruit and veg"}],rt@"Services",rt@"Grazing"}],
rt@"Other Income"}],
tr["Expenses in VAT:",
{rt@"Bank Service Charge",rt@"Dues and Subscriptions",rt@"Miscellaneous",rt@"Office Supplies",rt@"Production",rt@"Postage and Delivery",
tr["Professional Fees:",{rt@"Accounting",rt@"Legal Fees"}],
tr["Services:",{rt@"Phone",rt@"Internet"}],
rt@"Rent",rt@"Books",rt@"Software",rt@"Travel",rt@"Marketing",rt@"Fuel",rt@"Equipment",rt@"Materials",rt@"Plants and Trees",
tr["Auto:",{rt@"Auto Tax",rt@"Auto Fuel",rt@"Auto Maintenance"}],
rt@"Contractors"}],
rt@"Unspecified" (* should not be used as a destination a/c *),
tr["Expenses outside VAT:",{tr["Insurance:",{rt@"Liability Insurance",rt@"Auto Insurance"}]}],
tr["Emoluments:",
{tr["Partners Remuneration:",{rt["Matthew Fairtlough"],rt["Beth Champion"],rt["Mack Balance"],rt["Agatha Balance"]}],
tr["Employees:",{rt@"Gross Salaries"}]}],
tr["VAT:",{tr["Output:",{rt@"Sales"}],rt@"Input"}],
tr["Taxes:",{rt@"Income Tax",rt@"Corporation Tax",rt@"Other Tax"}],
rt@"Junk"
};


Clear[globMap]
globMap["business"]=
{"Assets:Cash in Hand"->{"ATM Debit"},"Equity:Partners Loan"->{"TFR xxxxzzz","TFR xxxxyyy"},"Expenses in VAT:Dues and Subscriptions"->{"COMPANIES HSE","FWAG"},"Expenses in VAT:Equipment"->{"ENDSLEIGH GAR","HARRIS & SON","MACHINE MART","MAPLIN EXETER","MOLE AVON","MP HARDWARE"},"Expenses in VAT:Fuel"->{"TEXSHINNERSBR","W M MORRISON"},"Expenses in VAT:Materials"->{"B & Q","CORNWALL FARM","CREATIVE CRAF","FERMOYS","FIRST TUNNELS","INTER-LINE","PIPE STOCK","RAINWATERPROD","SOUTHERN TIMB","TRAGO NEWTON","UNITED ROOFIN","WP-ALLPLAS","WWW.KIOWA"},"Expenses in VAT:Plants and Trees"->{"MOLES SEEDS","ORGANICCATALO","TAMAR ORGANIC","THE REAL SEED","WOODLAND TRUST","WWW.SOWSEEDS","WWW.SUTTONS-S"},"Expenses in VAT:Production"->{"CORNWALL FARM"},"Expenses in VAT:Software"->{"WEB HOSTING","WWW.ANDIC","WWW.ANDICA","WWW.TAXSH","WWW.TAXSHIELD"},"Income:Interest"->{"Bank Credit Interest"},"Income:Other Income"->{"ANNUAL BONUS","National Giro Credit"},"Income:Sales:Food:Fruit and veg"->{"DETOX RETREATS LTD","Faster Payment SOMEONE F & C","Faster Payment B Person","Faster Payment THRIVE CAFE RETAIL","National Giro Credit"},"VAT:Input"->{"HMRC VAT REPAY"}};
globMap[_]={};


Clear[flat1]
flat1[ls_List]:=Flatten[ls,1]
flat1[ob_]:=ob


expandMap[map_]:=Block[{x,y,z},\[LeftBracketingBar]z->x,(x_->y_)\[LeftTriangle]map,z_\[LeftTriangle]y\[RightBracketingBar]]


Clear[treeToTabs,forestToTabs]
treeToTabs[rt[r_],map_,tag_,name_:""]:=
{r->DynamicModule[{f=name<>r,string="",newMap=Block[{p,q},\[LeftAngleBracket]q,((name<>r)->p_)\[LeftTriangle]map,q_\[LeftTriangle]p\[RightAngleBracket]]},
Panel[Grid[{
{Style["String map",Bold],SpanFromLeft},
{"Name:",InputField[Dynamic[f],String,Enabled->False]},
{"String:",InputField[Dynamic[string],String]},
{"",Button["Add string",(newMap=newMap\[Union]{string};globMap[tag]={f->newMap}\[Union]Block[{p,g},\[LeftBracketingBar]p,(p:(g_->_))\[LeftTriangle]globMap[tag],g!=f\[RightBracketingBar]]),BaseStyle->Small]},
{"",Button["Remove string",(newMap=Complement[newMap,{string}];globMap[tag]={f->newMap}\[Union]Block[{p,g},\[LeftBracketingBar]p,(p:(g_->_))\[LeftTriangle]globMap[tag],g!=f\[RightBracketingBar]]),BaseStyle->Small]},
{"",Button["Print local map",Print[f->newMap],BaseStyle->Small]}}]]]}
treeToTabs[tr[h_,t_List],map_,tag_,name_:""]:=
With[{s=treeToTabs[#,map,tag,name<>h]&/@t},{h->TabView[flat1[s],ControlPlacement->{Center,Top},LabelStyle->Small,Appearance->{"Limited",10}]}]
forestToTabs[trs_List,map_,tag_]:=TabView[flat1[treeToTabs[#,map,tag]&/@trs],ControlPlacement->{Center,Top},LabelStyle->Small,Appearance->{"Limited",10}]


expandMap[map_]:=Block[{x,y,z},\[LeftBracketingBar]z->x,(x_->y_)\[LeftTriangle]map,z_\[LeftTriangle]y\[RightBracketingBar]]


ClearAll[autoNumber]
autoNumber[Dynamic[data_],fieldName_String:"number",offset_Integer:0]:=
Do[(data[[i,fieldName]]=offset+i),{i,1,Length[data]}]


ccDataShort={{"29/04/2013","CASHBACK",-0.13`},{"02/05/2013","PAYMENT RECEIVED - THANK YOU",-55.53`},{"05/05/2013","'T KOFFIEBOONTJE AALTER",151.3`},{"","## 00000000179.10 EUR @ 1.183741",0},{"05/05/2013","NON STERLING TRANSACTION FEE",4.16`},{"","## 00000000179.10 EUR @ 0.000000",0},{"18/05/2013","MAPLIN EXETER EX2 EXETER",69.99`},{"28/05/2013","CASHBACK",-0.55`},{"27/05/2013","THE ROYAL SEVEN STARS DEVON",27.6`},{"10/06/2013","WWW.TAYNA.CO.UK INTERNET",232.98`},{"10/06/2013","PAYPAL *ELECTRONCWW 35314369001",80.`},{"11/06/2013","WWW.TAYNA.CO.UK INTERNET",-6.8`},{"19/06/2013","PAYMENT RECEIVED - THANK YOU",-225.32`},{"21/06/2013","DIRECT DEBIT PAYMENT THANK YOU",-5.`},{"24/06/2013","WP-ALLPLAS.CO.UK ONLNE HITCHIN",168.6`},{"24/06/2013","WP-SCOACH ETICKET STOCKPORT",38.5`},{"28/06/2013","CASHBACK",-1.35`},{"01/07/2013","PAYPAL *ELECTRONCWW 35314369001",-7.95`},{"08/07/2013","THE MILL ON THE EXE EXETER",33.5`},{"08/07/2013","B & Q EXETER EXR166",73.86`}};


ClearAll[makeRow]
makeRow[data_,rowIndex_]:=
Map[Function[{colIndex},InputField[Dynamic[data[[rowIndex,colIndex]]],Switch[colIndex,1, String,2,String,3,Number],FieldSize->Switch[colIndex,1, 10,2,30,3,10],BaseStyle->{(*SignPadding\[Rule]True,*)(*Text*)Alignment->Right,NumberPadding->{"\t",""},NumberPoint->".",NumberSeparator->","}]],Range[3]]
SetAttributes[makeRow,HoldAll]
AssociationThread[{"date","description","value"}->#]&/@Map[makeRow[ccDataShort,#]&,Range[20]]//Dataset


Clear[numberedData]
numberedData=AssociationThread[{"date","description","value"}->#]&/@ccDataShort;
Dynamic[numberedData]//autoNumber
Dynamic[numberedData//Dataset]


dataShort=Dataset[AssociationThread[{"date","desc","value"}->#]&/@ccDataShort]


tags["food"]={"ROYAL SEVEN","KOFFIEBOONTJE"};
dataShort[Select[StringMatchQ[#desc,___~~tags["food"]~~___]&]]
total["food"]=%[Total,"value"]
len["food"]=%%//Length



