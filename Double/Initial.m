(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Needs["Units`"]


makeConst[fn_]:=(fn[]:=fn;SetAttributes[fn,HoldAll])


Needs["Monads`"];
Needs["Notation`"];
Notation[\!\(\*
TagBox[
RowBox[{"\[LeftBracketingBar]", "z___", "\[RightBracketingBar]"}],
"NotationTemplateTag",
BaseStyle->"NotationTemplateStyle"]\) \[DoubleLongLeftRightArrow] \!\(\*
TagBox[
RowBox[{"comprehend", "[", 
RowBox[{"Sets", ",", "z___"}], "]"}],
"NotationTemplateTag",
BaseStyle->"NotationTemplateStyle"]\)];
Notation[\!\(\*
TagBox[
RowBox[{"\[LeftAngleBracket]", "z___", "\[RightAngleBracket]"}],
"NotationTemplateTag",
BaseStyle->"NotationTemplateStyle"]\) \[DoubleLongLeftRightArrow] \!\(\*
TagBox[
RowBox[{"comprehend", "[", 
RowBox[{"List", ",", "z___"}], "]"}],
"NotationTemplateTag",
BaseStyle->"NotationTemplateStyle"]\)];
Notation[\!\(\*
TagBox[
RowBox[{"p_", "\[LeftTriangle]", "l_"}],
"NotationTemplateTag",
BaseStyle->"NotationTemplateStyle"]\) \[DoubleLongLeftRightArrow] \!\(\*
TagBox[
RowBox[{"generator", "[", 
RowBox[{"p_", ",", "l_"}], "]"}],
"NotationTemplateTag",
BaseStyle->"NotationTemplateStyle"]\)] ;
InfixNotation[\!\(\*
TagBox["\[DoubleVerticalBar]",
"NotationTemplateTag"]\),zipgen];


myMatMult[nn_,mm_]:=Block[{r,c},\[LeftAngleBracket]\[LeftAngleBracket]r.c,c_ \[LeftTriangle] Transpose@nn\[RightAngleBracket],r_ \[LeftTriangle] mm\[RightAngleBracket]]
myMatMult[RotationMatrix[\[Theta]],RotationMatrix[\[Phi]]]//Simplify//MatrixForm
RotationMatrix[\[Theta]].RotationMatrix[\[Phi]]//Simplify//MatrixForm


r={{a,d},{a,e},{b,d},{b,f},{c,f},{b,d},{e,f},{f,c}};


r=r/.{x_,y_}->(x\[RightTeeArrow]y)


dom[r_]:=Block[{x},\[LeftBracketingBar]x,(x_\[RightTeeArrow]_)\[LeftTriangle]r\[RightBracketingBar]]
ran[r_]:=Block[{y},\[LeftBracketingBar]y,(_\[RightTeeArrow]y_)\[LeftTriangle]r\[RightBracketingBar]]
hereAre[dom[r],ran[r]]


leftFunction[r_]:=Block[{x,y},\[LeftAngleBracket]x\[RightTeeArrow]\[LeftAngleBracket]y,(x\[RightTeeArrow]y_) \[LeftTriangle] r\[RightAngleBracket],x_ \[LeftTriangle] dom[r]\[RightAngleBracket]]
leftFunction[r]


rightFunction[r_]:=Block[{y,x},\[LeftAngleBracket]y\[RightTeeArrow]\[LeftAngleBracket]x,(x_\[RightTeeArrow]y) \[LeftTriangle] r\[RightAngleBracket],y_ \[LeftTriangle] ran[r]\[RightAngleBracket]]
rightFunction[r]


converse[r_]:=Block[{y,x},\[LeftAngleBracket](y\[RightTeeArrow]x),(x_\[RightTeeArrow]y_) \[LeftTriangle] r\[RightAngleBracket]]
hereAre[r,converse[r]]


makeRel[f_,d_]:=Block[{a},\[LeftBracketingBar]a\[RightTeeArrow]f[a],a_\[LeftTriangle]d\[RightBracketingBar]]
squares=makeRel[#^2&,Range[3,7]]
add3=makeRel[#+3&,Range[4,40]]


prod[r_,s_]:=Block[{ra,rb,sa,sb},
\[LeftBracketingBar]{ra,sa}\[RightTeeArrow]{rb,sb},(ra_\[RightTeeArrow]rb_)\[LeftTriangle]r,(sa_\[RightTeeArrow]sb_)\[LeftTriangle]s\[RightBracketingBar]]
prod[{a\[RightTeeArrow]d,b\[RightTeeArrow]d},squares]


accountTrees["business"]=
{tr["Bank Accounts:",{rt@"Business Account"}],tr["Assets:",{tr["Capital Equipment:",{rt@"Computer Equipment",rt@"Machinery"}],rt@"Accounts Receivable",rt@"Buildings",rt@"Cash in Hand",rt@"Land",rt@"Plantations"}],
tr["Liabilities:",{rt@"Credit Card",rt@"Accounts Payable"}],
tr["Equity:",{tr["Partners Loan:",{rt@"Matthew loan",rt@"Benita loan",rt@"Sky loan",rt@"Martin loan",rt@"Jenny loan"}],
tr["Capital:",{rt@"Matthew capital",rt@"Benita capital",rt@"Sky capital",rt@"Martin capital",rt@"Jenny capital"}],rt@"Opening Balances"}],
tr["Income:",
{rt["Interest"],
tr["Sales:",{tr["Food:",{rt@"Eggs and meat",rt@"Fruit and veg"}],rt@"Services",rt@"Grazing"}],
rt@"Other Income"}],
tr["Expenses in VAT:",
{rt@"Bank Service Charge",rt@"Dues and Subscriptions",rt@"Miscellaneous",rt@"Office Supplies",rt@"Production",rt@"Postage and Delivery",
tr["Professional Fees:",{rt@"Accounting",rt@"Legal Fees"}],
tr["Services:",{rt@"Phone",rt@"Internet"}],
rt@"Rent",rt@"Books",rt@"Software",rt@"Travel",rt@"Marketing",rt@"Fuel",rt@"Equipment",rt@"Materials",rt@"Plants and Trees",
tr["Auto:",{rt@"Auto Tax",rt@"Auto Fuel",rt@"Auto Maintenance"}],
rt@"Contractors"}],
rt@"Unspecified" (* should not be used as a destination a/c *),
tr["Expenses outside VAT:",{tr["Insurance:",{rt@"Liability Insurance",rt@"Auto Insurance"}]}],
tr["Emoluments:",
{tr["Partners Remuneration:",{rt["Matthew Fairtlough"],rt["Benita Verniers"],rt["Martin Foster"],rt["Jenny Foster"]}],
tr["Employees:",{rt@"Gross Salaries"}]}],
tr["VAT:",{tr["Output:",{rt@"Sales"}],rt@"Input"}],
tr["Taxes:",{rt@"Income Tax",rt@"Corporation Tax",rt@"Other Tax"}],
rt@"Junk"
};
